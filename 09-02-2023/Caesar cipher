import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'caesarCipher' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. STRING s
     *  2. INTEGER k
     */

    public static String caesarCipher(String s, int k) {
    // Write your code here
    String s1="";
    String s2="abcdefghijklmnopqrstuvwxyz";
    String s3="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    for(int i=0;i<s.length();i++)
    {
        if(s3.contains(Character.toString(s.charAt(i))))
        {
            char ch=(char)(((int)s.charAt(i)+k-65)%26+65);
            s1=s1+ch;
        }
        else if(s2.contains(Character.toString(s.charAt(i))))
        {
            char ch=(char)(((int)s.charAt(i)+k-97)%26+97);
            s1=s1+ch;
        }
        else
        {
            s1=s1+s.charAt(i);
        }
    }
    return s1;

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        String s = bufferedReader.readLine();

        int k = Integer.parseInt(bufferedReader.readLine().trim());

        String result = Result.caesarCipher(s, k);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
